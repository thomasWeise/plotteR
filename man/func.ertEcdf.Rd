% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ertEcdfFun.R
\name{func.ertEcdf}
\alias{func.ertEcdf}
\title{Create an ECDF Function over ERTs}
\usage{
func.ertEcdf(x, goal = 0, goal.dim = 2L, time.dim = 1L,
  comparator = `<=`, time.type = as.integer, goal.type = as.numeric,
  time.min = 1L, time.max = time.type(NA_real_), extract.run = identity,
  extract.runs = identity)
}
\arguments{
\item{x}{the data, maybe a list of [lists of matrices or a list of
vectors/lists], where each element has at least the \code{goal.dim} and
\code{time.dim} dimension.}

\item{goal}{the goal value, i.e., the value which must be reached to be
counted as success}

\item{goal.dim}{the dimension where where the goal values can be found}

\item{time.dim}{the dimension where the time values can be found}

\item{comparator}{the comparator, usually \code{`<=`} or \code{`>=`}}

\item{time.type}{the type function the time dimension, should be
\code{as.integer} or \code{as.numeric}}

\item{time.min}{the minimum time value to be used for the diagram, or
\code{NA} to use the smallest time value in any run}

\item{time.max}{the maximum time value to be used, or \code{NA} to pick the
maximum time value of any run}

\item{extract.run}{a function which can be used to extract the single runs
from the extracted run sets, e.g., \code{identity}}

\item{extract.runs}{a function which can be used to extract the run sets from
\code{x}, e.g., \code{identity}}
}
\value{
a \code{list(x=c(...), y=c(...))} where the two members \code{x} and
  \code{y} will be vectors of corresponding coordinates
}
\description{
Create an Empirical Cumulative Distribution Function (ECDF)
  function over Expected Running Times (ERTs), i.e., a list with two membery
  \code{x} and \code{y} that stand for the coordinates of the function. This
  approach is suitable if we want to plot an ECDF over multiple distinct
  problems. We can compute the expected running time of an algorithm on the
  given problem to reach the \code{goal}. Over all the ERTs of all problems,
  we can then draw the ECDF.
}
